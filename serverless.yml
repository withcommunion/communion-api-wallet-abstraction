#TODO: Gonna need to use serverless-webpack at some point.  That point isn't now
service: communion-wallet-abstraction
configValidationMode: error

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  stackName: ${sls:stage}-${self:service}
  apiName: ${sls:stage}-${self:service}
  memorySize: 512
  deploymentPrefix: serverless
  versionFunctions: true
  # http-api docs https://www.serverless.com/framework/docs/providers/aws/events/http-api
  httpApi:
    # View docs above - we will want to make it only accept from our domain
    cors: true
  # stackPolicy: # Optional CF stack policy. The example below allows updates to all resources except deleting/replacing EC2 instances (use with caution!)
  #   - Effect: Allow
  #     Principal: '*'
  #     Action: 'Update:*'
  #     Resource: '*'

plugins:
  - serverless-bundle

custom:
  bundle:
    externals:
      - crypto
      - ethers
      - '@avalabs/avalanche-wallet-sdk'

functions:
  getWalletByUserId:
    name: getWalletByUserId-${sls:stage}
    handler: src/endpoints/api-get-wallet-by-user-id/get-wallet-by-user-id.handler
    events:
      # http-api docs https://www.serverless.com/framework/docs/providers/aws/events/http-api
      - httpApi:
          method: GET
          path: /wallet/{userId}
  createWallet: #TODO: We likely don't want this as an endpoint, instead use the lambda as a trigger on Cognito.
    name: createWallet-${sls:stage}
    handler: src/endpoints/api-create-wallet/create-wallet.handler
    events:
      # http-api docs https://www.serverless.com/framework/docs/providers/aws/events/http-api
      - httpApi:
          method: POST
          path: /wallet
